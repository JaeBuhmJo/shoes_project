<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.project.mapper.ProductMapper">

	<resultMap type="com.project.domain.ProductDTO" id="productMap">
		<id column="product_id" property="productId"/>
		<result column="product_name" property="productName"/>
		<result column="brand" property="brand"/>
		<result column="price" property="price"/>
		<collection property="attachmentList" resultMap="attachmentMap"/>
	</resultMap>
	<resultMap type="com.project.domain.AttachmentDTO" id="attachmentMap">
		<id column="uuid" property="uuid"/>
		<result column="product_id" property="productId"/>
		<result column="upload_path" property="uploadPath"/>
		<result column="file_name" property="fileName"/>
	</resultMap>

 	<select id="getOnSaleList" resultMap="productMap">
 		SELECT pr.product_id, pr.product_name, pr.brand, pr.price, at.uuid, at.upload_path, at.file_name
		FROM (
			SELECT product_id, product_name, brand, price, ROW_NUMBER() OVER (ORDER BY
		    <choose>
		      <when test="order== 'registered-date-desc'">registered_date desc</when>
		      <when test="order== 'sold-count-desc'">sold_count desc</when>
		      <when test="order== 'price-desc'">price desc</when>
		      <when test="order== 'price-asc'">price asc</when>
		      <otherwise></otherwise>
		    </choose>
		     ) AS rnum
		    FROM products 
		    WHERE on_sale = 1 
		    <choose>
		      <when test="gender== 'for-men'">and for_men=1 </when>
		      <when test="gender== 'for-women'">and for_women=1 </when>
		      <otherwise></otherwise>
		    </choose>
		    <choose>
		      <when test="category== 'running'">and category = '운동화'</when>
		      <when test="category== 'shoes'">and category = '구두'</when>
		      <when test="category== 'slipper'">and category = '슬리퍼'</when>
		      <otherwise></otherwise>
		    </choose>
		) pr
		left outer JOIN attachments at ON pr.product_id = at.product_id
		WHERE pr.rnum BETWEEN ((#{page}-1)*#{listAmount})+1 AND (#{page}*#{listAmount})
	</select>
	
	<select id="getOnSaleCount">
		select count(*) from products where on_sale = 1
			<choose>
		      <when test="gender== 'for-men'">and for_men=1 </when>
		      <when test="gender== 'for-women'">and for_women=1 </when>
		      <otherwise></otherwise>
		    </choose>  
		    <choose>
		      <when test="category== 'running'">and category = '운동화'</when>
		      <when test="category== 'shoes'">and category = '구두'</when>
		      <when test="category== 'slipper'">and category = '슬리퍼'</when>
		      <otherwise></otherwise>
		    </choose>
	</select>
	
	<select id="getTotalList">
		select * from products
			<choose>
		      <when test="searchType == 'productId'"> where product_id = #{keyword} </when>
		      <when test="searchType == 'productName'"> where product_name like CONCAT('%',CONCAT(#{keyword},'%')) </when>
		      <otherwise></otherwise>
		    </choose>
		order by registered_date desc
	</select>
	
	<insert id="insertProduct">
		insert into products values(products_seq.nextval,#{category},#{brand},#{detail},#{price},
									#{discountPrice},#{productCountry},#{productYear},#{productName},#{onSale},
									0,sysdate,sysdate,#{forMen},#{forWomen},#{colors})
	</insert>

	<select id="getCurrentProductSequence">
		select products_seq.currval from dual
	</select>
	
	<select id="getProduct" resultType="com.project.domain.ProductDTO">
		select * from products where product_id = #{productId}
	</select>
	
	<update id="updateProduct">
		 update products set category=#{category}, brand=#{brand}, detail=#{detail}, price=#{price},
		 					 discount_price=#{discountPrice}, product_country=#{productCountry},
		 					 product_year=#{productYear}, product_name=#{productName}, on_sale=#{onSale},
		 					 modified_date=sysdate, for_men=#{forMen}, for_women=#{forWomen}
		 where product_id = #{productId}
	</update>

</mapper>