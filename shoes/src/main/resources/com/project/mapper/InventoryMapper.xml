<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.project.mapper.InventoryMapper">
	
	<insert id="insertInventory" parameterType="list" >
	    insert into inventories (inventory_id, product_id, product_size, quantity, product_color)
	    select inventories_seq.nextval, x.product_id, x.product_size, x.quantity, x.product_color
	    from (
	        <foreach collection="list" item="item" separator="union all">
	            select #{item.productId} as product_id, 
	                   #{item.productSize} as product_size,
	                   #{item.quantity} as quantity,
	                   #{item.productColor} as product_color
	            from dual
	        </foreach>
	    ) x 
	</insert> 
	
	<resultMap type="com.project.domain.ProductDTO" id="productMap">
		<id property="productId" column="product_id"/>
		<result property="productName" column="product_name"/>
		<result property="onSale" column="on_sale"/>
		<result property="soldCount" column="sold_count"/>
		<result property="price" column="price"/>
		<collection property="inventories" resultMap="inventoryMap"/>
	</resultMap>
	<resultMap type="com.project.domain.InventoryDTO" id="inventoryMap">
		<id property="inventoryId" column="inventory_id"/>		
		<result property="productSize" column="product_size"/>
		<result property="quantity" column="quantity"/>
		<result property="stockedDate" column="stocked_date"/>
		<result property="productColor" column="product_color"/>
		<result property="discontinued" column="discontinued"/>
	</resultMap>
	
	<select id="getTotalInventories" resultMap="productMap">
		select p.product_id, i.inventory_id, p.product_name, i.product_size, i.quantity, 
		p.on_sale, p.sold_count, to_char(i.stocked_date,'yyyy-MM-dd/HH:mm:ss') as stocked_date , p.price, i.product_color, i.discontinued
		from inventories i join products p on i.product_id = p.product_id
		where
			<choose>
		      <when test="discontinued==1"> i.discontinued = 1 </when>
		      <otherwise> i.discontinued = 0</otherwise>
		    </choose>
			<choose>
		      <when test="searchType == 'quantity'"> and i.quantity > 0 </when>
		      <when test="searchType == 'productName'"> and p.product_name like CONCAT('%',CONCAT(#{keyword},'%')) </when>
		      <when test="searchType == 'productId'"> and p.product_id = #{keyword} </when>
		      <when test="searchType == 'inventoryId'"> and i.inventory_id = #{keyword} </when>
		      <otherwise></otherwise>
		    </choose>
		order by p.product_id desc, i.inventory_id asc
	</select>
	
	<select id="getInventories" resultType="com.project.domain.InventoryDTO">
		select * from inventories where product_id = #{productId} order by inventory_id asc
	</select>
	
	<select id="checkInventory" resultType="Integer">
		select count(*) from inventories where product_size = #{productSize} and product_id = #{productId}
	</select>
	
	<update id="updateInventory">
	    <foreach collection="list" item="inventory" separator=";" open="DECLARE BEGIN" close="; END;">
          update inventories
          set quantity = #{inventory.quantity}
          where product_id = #{inventory.productId} and product_color = #{inventory.productColor} and product_size = #{inventory.productSize}
      </foreach>
	</update>
	
	<delete id="closeInventory">
		update inventories set quantity=0, discontinued = 1 where product_id = #{productId} 
	</delete>
</mapper>